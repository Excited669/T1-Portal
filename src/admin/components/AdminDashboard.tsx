import { useEffect, useState } from 'react';
import { api } from '@/shared/api/http';

interface AdminStats {
  totalAchievements: number;
  blockedAchievements: number;
  availableAchievements: number;
  activeUsers: number;
  sectionsCount: number;
  awardsThisMonth: number;
  awardsTotal: number;
  avgAchievementsPerActiveUser: number;
  userCoveragePercent: number;
  topPopularAllTime: Array<{
    id: string;
    title: string;
    awardsCount: number;
  }>;
  topPopular30d: Array<{
    id: string;
    title: string;
    awardsCount: number;
  }>;
  rarestActive: Array<{
    id: string;
    title: string;
    rarityPercent: number;
  }>;
  awardsByMonth: Array<{
    month: string;
    count: number;
  }>;
}

const AdminDashboard: React.FC = () => {
  const [stats, setStats] = useState<AdminStats | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const fetchStats = async () => {
      try {
        setLoading(true);
        const response = await api.get<AdminStats>('/admin/stats');
        setStats(response.data);
      } catch (err: any) {
        setError(err.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
      } finally {
        setLoading(false);
      }
    };

    fetchStats();
  }, []);

  if (loading) {
    return (
      <div className="admin-dashboard">
        <h2 className="dashboard-title">–î–∞—à–±–æ—Ä–¥ –∞—á–∏–≤–æ–∫</h2>
        <div style={{ textAlign: 'center', padding: '40px' }}>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="admin-dashboard">
        <h2 className="dashboard-title">–î–∞—à–±–æ—Ä–¥ –∞—á–∏–≤–æ–∫</h2>
        <div style={{ textAlign: 'center', padding: '40px', color: '#d32f2f' }}>
          <p>–û—à–∏–±–∫–∞: {error}</p>
        </div>
      </div>
    );
  }

  if (!stats) {
    return (
      <div className="admin-dashboard">
        <h2 className="dashboard-title">–î–∞—à–±–æ—Ä–¥ –∞—á–∏–≤–æ–∫</h2>
        <div style={{ textAlign: 'center', padding: '40px' }}>
          <p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</p>
        </div>
      </div>
    );
  }

  return (
    <div className="admin-dashboard">
      <h2 className="dashboard-title">–î–∞—à–±–æ—Ä–¥ –∞—á–∏–≤–æ–∫</h2>
      
      {/* –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="dashboard-grid">
        <div className="dashboard-card">
          <div className="dashboard-card-icon">üìä</div>
          <div className="dashboard-card-content">
            <div className="dashboard-card-number">{stats.sectionsCount}</div>
            <div className="dashboard-card-label">–†–∞–∑–¥–µ–ª–æ–≤</div>
          </div>
        </div>
        
        <div className="dashboard-card">
          <div className="dashboard-card-icon">üë•</div>
          <div className="dashboard-card-content">
            <div className="dashboard-card-number">{stats.activeUsers}</div>
            <div className="dashboard-card-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>
          </div>
        </div>
        
        <div className="dashboard-card">
          <div className="dashboard-card-icon">üèÜ</div>
          <div className="dashboard-card-content">
            <div className="dashboard-card-number">{stats.totalAchievements}</div>
            <div className="dashboard-card-label">–í—Å–µ–≥–æ –∞—á–∏–≤–æ–∫</div>
          </div>
        </div>
        
        <div className="dashboard-card">
          <div className="dashboard-card-icon">‚úÖ</div>
          <div className="dashboard-card-content">
            <div className="dashboard-card-number">{stats.availableAchievements}</div>
            <div className="dashboard-card-label">–î–æ—Å—Ç—É–ø–Ω—ã—Ö –∞—á–∏–≤–æ–∫</div>
          </div>
        </div>
        
        <div className="dashboard-card">
          <div className="dashboard-card-icon">üö´</div>
          <div className="dashboard-card-content">
            <div className="dashboard-card-number">{stats.blockedAchievements}</div>
            <div className="dashboard-card-label">–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö</div>
          </div>
        </div>
        
        <div className="dashboard-card">
          <div className="dashboard-card-icon">üìà</div>
          <div className="dashboard-card-content">
            <div className="dashboard-card-number">{stats.awardsThisMonth}</div>
            <div className="dashboard-card-label">–ù–∞–≥—Ä–∞–¥ –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ</div>
          </div>
        </div>
        
        <div className="dashboard-card">
          <div className="dashboard-card-icon">üéØ</div>
          <div className="dashboard-card-content">
            <div className="dashboard-card-number">{stats.awardsTotal}</div>
            <div className="dashboard-card-label">–í—Å–µ–≥–æ –Ω–∞–≥—Ä–∞–¥</div>
          </div>
        </div>
        
        
        
        
      </div>

      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div style={{ marginTop: '40px', display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(400px, 1fr))', gap: '20px' }}>
        {/* –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∞—á–∏–≤–∫–∏ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è */}
        <div className="admin-card">
          <h3 style={{ marginBottom: '16px', color: '#263238' }}>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∞—á–∏–≤–∫–∏ (–≤—Å–µ –≤—Ä–µ–º—è)</h3>
          <div style={{ display: 'grid', gap: '8px' }}>
            {stats.topPopularAllTime.slice(0, 5).map((achievement, index) => (
              <div key={achievement.id} style={{ display: 'flex', justifyContent: 'space-between', padding: '8px', backgroundColor: '#f5f7fa', borderRadius: '8px' }}>
                <span style={{ fontWeight: '500' }}>{index + 1}. {achievement.title}</span>
                <span style={{ color: '#00AAE6', fontWeight: '600' }}>{achievement.awardsCount}</span>
              </div>
            ))}
          </div>
        </div>

        {/* –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∞—á–∏–≤–∫–∏ –∑–∞ 30 –¥–Ω–µ–π */}
        <div className="admin-card">
          <h3 style={{ marginBottom: '16px', color: '#263238' }}>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∞—á–∏–≤–∫–∏ (30 –¥–Ω–µ–π)</h3>
          <div style={{ display: 'grid', gap: '8px' }}>
            {stats.topPopular30d.slice(0, 5).map((achievement, index) => (
              <div key={achievement.id} style={{ display: 'flex', justifyContent: 'space-between', padding: '8px', backgroundColor: '#f5f7fa', borderRadius: '8px' }}>
                <span style={{ fontWeight: '500' }}>{index + 1}. {achievement.title}</span>
                <span style={{ color: '#00AAE6', fontWeight: '600' }}>{achievement.awardsCount}</span>
              </div>
            ))}
          </div>
        </div>

        {/* –°–∞–º—ã–µ —Ä–µ–¥–∫–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∞—á–∏–≤–∫–∏ */}
        <div className="admin-card">
          <h3 style={{ marginBottom: '16px', color: '#263238' }}>–°–∞–º—ã–µ —Ä–µ–¥–∫–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∞—á–∏–≤–∫–∏</h3>
          <div style={{ display: 'grid', gap: '8px' }}>
            {stats.rarestActive.slice(0, 5).map((achievement, index) => (
              <div key={achievement.id} style={{ display: 'flex', justifyContent: 'space-between', padding: '8px', backgroundColor: '#f5f7fa', borderRadius: '8px' }}>
                <span style={{ fontWeight: '500' }}>{index + 1}. {achievement.title}</span>
                <span style={{ color: '#fd7e14', fontWeight: '600' }}>{(achievement.rarityPercent)?.toFixed(1)}%</span>
              </div>
            ))}
          </div>
        </div>

        {/* –ù–∞–≥—Ä–∞–¥—ã –ø–æ –º–µ—Å—è—Ü–∞–º */}
        <div className="admin-card">
          <h3 style={{ marginBottom: '16px', color: '#263238' }}>–ù–∞–≥—Ä–∞–¥—ã –ø–æ –º–µ—Å—è—Ü–∞–º</h3>
          <div style={{ display: 'grid', gap: '8px' }}>
            {stats.awardsByMonth.slice(-6).map((monthData, index) => (
              <div key={monthData.month} style={{ display: 'flex', justifyContent: 'space-between', padding: '8px', backgroundColor: '#f5f7fa', borderRadius: '8px' }}>
                <span style={{ fontWeight: '500' }}>{monthData.month}</span>
                <span style={{ color: '#00AAE6', fontWeight: '600' }}>{monthData.count}</span>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default AdminDashboard;

